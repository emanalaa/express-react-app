{"ast":null,"code":"var _jsxFileName = \"/Users/eman/coding/autoscout24/frontend/src/components/List/List.js\";\nimport React from 'react';\nimport RemovableListItem from '../RemovableListItem';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst List = props => {\n  const {\n    items,\n    removeItem\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    style: {\n      paddingLeft: 0\n    },\n    children: items.map(item => /*#__PURE__*/_jsxDEV(RemovableListItem, {\n      text: item.text,\n      id: item.key,\n      removeItem: removeItem\n    }, item.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 15\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 7\n  }, this);\n};\n\n_c = List;\nList.propTypes = {\n  /** List items.\n   *  key: The item's unique key.\n   *  text: The item's description. */\n  items: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired\n  })),\n\n  /** A collback to be executed on a remove-item event */\n  removeItem: PropTypes.func\n};\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/eman/coding/autoscout24/frontend/src/components/List/List.js"],"names":["React","RemovableListItem","PropTypes","List","props","items","removeItem","paddingLeft","map","item","text","key","propTypes","arrayOf","shape","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAGA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAsBF,KAA5B;AACA,sBACI;AAAI,IAAA,KAAK,EAAE;AAACG,MAAAA,WAAW,EAAE;AAAd,KAAX;AAAA,cACKF,KAAK,CAACG,GAAN,CAAUC,IAAI,iBACX,QAAC,iBAAD;AAAkC,MAAA,IAAI,EAAEA,IAAI,CAACC,IAA7C;AAAmD,MAAA,EAAE,EAAED,IAAI,CAACE,GAA5D;AAAiE,MAAA,UAAU,EAAEL;AAA7E,OAAwBG,IAAI,CAACE,GAA7B;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOD,CATD;;KAAMR,I;AAWNA,IAAI,CAACS,SAAL,GAAiB;AACf;AACF;AACA;AACIP,EAAAA,KAAK,EAAEH,SAAS,CAACW,OAAV,CACLX,SAAS,CAACY,KAAV,CAAgB;AACdH,IAAAA,GAAG,EAAET,SAAS,CAACa,MAAV,CAAiBC,UADR;AAEdN,IAAAA,IAAI,EAAER,SAAS,CAACa,MAAV,CAAiBC;AAFT,GAAhB,CADK,CAJM;;AAUb;AACAV,EAAAA,UAAU,EAAEJ,SAAS,CAACe;AAXT,CAAjB;AAcE,eAAed,IAAf","sourcesContent":["import React from 'react';\nimport RemovableListItem from '../RemovableListItem';\nimport PropTypes from 'prop-types';\n\n\nconst List = (props) => {\n  const {items, removeItem} = props;\n  return (\n      <ul style={{paddingLeft: 0}}>\n          {items.map(item =>  \n              <RemovableListItem key={item.key} text={item.text} id={item.key} removeItem={removeItem}/>   \n          )}\n      </ul>\n  )\n}\n\nList.propTypes = {\n  /** List items.\n   *  key: The item's unique key.\n   *  text: The item's description. */ \n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        key: PropTypes.string.isRequired,\n        text: PropTypes.string.isRequired,\n      })\n    ),\n    /** A collback to be executed on a remove-item event */\n    removeItem: PropTypes.func\n  };\n\n  export default List;\n"]},"metadata":{},"sourceType":"module"}