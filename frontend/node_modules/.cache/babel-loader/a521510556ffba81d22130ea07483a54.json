{"ast":null,"code":"var _jsxFileName = \"/Users/eman/coding/autoscout24/frontend/src/components/Reports/reports.js\";\nimport React, { Component } from 'react';\nimport { useRef, useState } from \"react\";\nimport styled from 'styled-components';\nimport Button from '../Button';\nimport InputText from '../TextInput';\nimport List from '../List';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    position: relative;\n    margin: 50px auto;\n    overflow: auto;\n    width: 25%;\n    min-height: 250px;\n    background-color: rgb(255, 255, 255);\n    box-shadow: 5px 5px 15px #00000047;\n    border-radius: 10px;\n    padding: 40px 25px 40px 25px;\n    @media (max-width: 1200px) {\n        width: 40%\n    };\n    @media screen and (max-width: 600px){\n        margin: 0 0;\n        overflow: auto;\n        width: 85%;\n        margin: auto;\n    }\n`;\n_c = Container;\nconst InputForm = styled.form`\n    display: flex;\n    margin-bottom: 25px;\n    & > :first-child{\n        margin-right: 6px;\n    }\n`;\n_c2 = InputForm;\nexport default class ToDoListContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      inputText: '',\n      submitDisabled: true\n    };\n\n    this.addToDo = text => {\n      const key = Math.floor(Math.random() * 10000).toString();\n      this.setState({\n        toDoItems: [{\n          text,\n          key\n        }, ...this.state.toDoItems],\n        submitDisabled: true\n      });\n    };\n\n    this.delToDo = id => {\n      this.setState({\n        toDoItems: this.state.toDoItems.filter(todo => todo.key !== id)\n      });\n    };\n\n    this.updateInput = event => {\n      let text = event.target.value.replace(/\\s/g, '');\n      this.setState({\n        inputText: event.target.value\n      });\n\n      if (text) {\n        this.setState({\n          submitDisabled: false\n        });\n      } else {\n        this.setState({\n          submitDisabled: true\n        });\n      }\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.addToDo(this.state.inputText);\n      this.setState({\n        inputText: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(InputForm, {\n        onSubmit: this.handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          size: \"60\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n/*render() {\n    return (\n        <Container>\n            <InputForm onSubmit={this.handleSubmit}>\n                <InputText value ={this.state.inputText} onChange={this.updateInput} />\n                <Button disabled={this.state.submitDisabled} type=\"submit\">Add</Button>\n            </InputForm>\n            <List items={this.state.toDoItems} removeItem={this.delToDo} />\n        </Container>\n    )\n}*/\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"InputForm\");","map":{"version":3,"sources":["/Users/eman/coding/autoscout24/frontend/src/components/Reports/reports.js"],"names":["React","Component","useRef","useState","styled","Button","InputText","List","Container","div","InputForm","form","ToDoListContainer","state","inputText","submitDisabled","addToDo","text","key","Math","floor","random","toString","setState","toDoItems","delToDo","id","filter","todo","updateInput","event","target","value","replace","handleSubmit","preventDefault","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,IAAP,MAAiB,SAAjB;;AAEA,MAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBA;KAAMD,S;AAqBN,MAAME,SAAS,GAAGN,MAAM,CAACO,IAAK;AAC9B;AACA;AACA;AACA;AACA;AACA,CANA;MAAMD,S;AAQN,eAAe,MAAME,iBAAN,SAAgCX,SAAhC,CAA0C;AAAA;AAAA;AAAA,SAErDY,KAFqD,GAE7C;AACJC,MAAAA,SAAS,EAAE,EADP;AAEJC,MAAAA,cAAc,EAAE;AAFZ,KAF6C;;AAAA,SAOrDC,OAPqD,GAO1CC,IAAD,IAAU;AAChB,YAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgB,KAA5B,EAAoCC,QAApC,EAAZ;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE,CAAC;AAAEP,UAAAA,IAAF;AAAQC,UAAAA;AAAR,SAAD,EAAgB,GAAG,KAAKL,KAAL,CAAWW,SAA9B,CAAb;AAAuDT,QAAAA,cAAc,EAAE;AAAvE,OAAd;AACH,KAVoD;;AAAA,SAYrDU,OAZqD,GAY1CC,EAAD,IAAQ;AACd,WAAKH,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE,KAAKX,KAAL,CAAWW,SAAX,CAAqBG,MAArB,CAA4BC,IAAI,IAAIA,IAAI,CAACV,GAAL,KAAaQ,EAAjD;AAAb,OAAd;AACH,KAdoD;;AAAA,SAgBrDG,WAhBqD,GAgBtCC,KAAD,IAAW;AACrB,UAAIb,IAAI,GAAGa,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,OAAnB,CAA2B,KAA3B,EAAkC,EAAlC,CAAX;AACA,WAAKV,QAAL,CAAc;AAAET,QAAAA,SAAS,EAAEgB,KAAK,CAACC,MAAN,CAAaC;AAA1B,OAAd;;AACA,UAAIf,IAAJ,EAAU;AACN,aAAKM,QAAL,CAAc;AAAER,UAAAA,cAAc,EAAE;AAAlB,SAAd;AACH,OAFD,MAEO;AACH,aAAKQ,QAAL,CAAc;AAAER,UAAAA,cAAc,EAAE;AAAlB,SAAd;AACH;AACJ,KAxBoD;;AAAA,SA0BrDmB,YA1BqD,GA0BrCJ,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACK,cAAN;AACA,WAAKnB,OAAL,CAAa,KAAKH,KAAL,CAAWC,SAAxB;AACA,WAAKS,QAAL,CAAc;AAAET,QAAAA,SAAS,EAAE;AAAb,OAAd;AACH,KA9BoD;AAAA;;AAgCrDsB,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,SAAD;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAE,KAAKF,YAA1B;AAAA,+BACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAxCoD;AA2CzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react'\nimport { useRef, useState } from \"react\";\n\nimport styled from 'styled-components'\nimport Button from '../Button'\nimport InputText from '../TextInput'\nimport List from '../List';\n\nconst Container = styled.div`\n    position: relative;\n    margin: 50px auto;\n    overflow: auto;\n    width: 25%;\n    min-height: 250px;\n    background-color: rgb(255, 255, 255);\n    box-shadow: 5px 5px 15px #00000047;\n    border-radius: 10px;\n    padding: 40px 25px 40px 25px;\n    @media (max-width: 1200px) {\n        width: 40%\n    };\n    @media screen and (max-width: 600px){\n        margin: 0 0;\n        overflow: auto;\n        width: 85%;\n        margin: auto;\n    }\n`\n\nconst InputForm = styled.form`\n    display: flex;\n    margin-bottom: 25px;\n    & > :first-child{\n        margin-right: 6px;\n    }\n`\n\nexport default class ToDoListContainer extends Component {\n\n    state = {\n        inputText: '',\n        submitDisabled: true\n    }\n\n    addToDo = (text) => {\n        const key = Math.floor((Math.random() * 10000)).toString();\n        this.setState({ toDoItems: [{ text, key }, ...this.state.toDoItems], submitDisabled: true });\n    }\n\n    delToDo = (id) => {\n        this.setState({ toDoItems: this.state.toDoItems.filter(todo => todo.key !== id) })\n    }\n\n    updateInput = (event) => {\n        let text = event.target.value.replace(/\\s/g, '');\n        this.setState({ inputText: event.target.value })\n        if (text) {\n            this.setState({ submitDisabled: false })\n        } else {\n            this.setState({ submitDisabled: true })\n        }\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.addToDo(this.state.inputText);\n        this.setState({ inputText: '' });\n    }\n\n    render() {\n        return (\n            <Container>\n                <InputForm onSubmit={this.handleSubmit}>\n                    <input type=\"file\" size=\"60\"/>\n                </InputForm>\n            </Container>\n        )\n    }\n}\n\n/*render() {\n    return (\n        <Container>\n            <InputForm onSubmit={this.handleSubmit}>\n                <InputText value ={this.state.inputText} onChange={this.updateInput} />\n                <Button disabled={this.state.submitDisabled} type=\"submit\">Add</Button>\n            </InputForm>\n            <List items={this.state.toDoItems} removeItem={this.delToDo} />\n        </Container>\n    )\n}*/\n"]},"metadata":{},"sourceType":"module"}