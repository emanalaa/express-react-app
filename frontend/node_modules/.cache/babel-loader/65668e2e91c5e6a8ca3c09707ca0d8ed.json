{"ast":null,"code":"var _jsxFileName = \"/Users/eman/coding/autoscout24/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport AvgTop30Contacted from './components/Average30Contacted';\nimport AverageListing from './components/AverageListing';\nimport Distributions from './components/Distributions';\nimport Top5perMonth from './components/Top5PerMonth';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      averageListing: {},\n      distributions: [],\n      top5PerMonth: {\n        \"\": []\n      },\n      averge30TopContacted: \"\",\n      selectedFile: null,\n      loaded: 0\n    };\n\n    this.handleselectedFile = event => {\n      this.setState({\n        selectedFile: event.target.files[0],\n        loaded: 0\n      });\n    };\n\n    this.handleUpload = () => {\n      const data = new FormData();\n      data.append('file', this.state.selectedFile, this.state.selectedFile.name);\n      console.log(data);\n      axios.post('http://localhost:8080/UploadCsvFile', data, {\n        onUploadProgress: ProgressEvent => {\n          this.setState({\n            loaded: ProgressEvent.loaded / ProgressEvent.total * 100\n          });\n        }\n      }).then(res => {\n        console.log(res.statusText);\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/Averge30TopContacted').then(res => res.json()).then(data => {\n      this.setState({\n        averge30TopContacted: data\n      });\n    }).catch(console.log);\n    fetch('http://localhost:8080/averageListing').then(res => res.json()).then(data => {\n      this.setState({\n        averageListing: data\n      });\n    }).catch(console.log);\n    fetch('http://localhost:8080/distributions').then(res => res.json()).then(data => {\n      this.setState({\n        distributions: data\n      });\n    }).catch(console.log);\n    fetch('http://localhost:8080/top5PerMonth').then(res => res.json()).then(data => {\n      this.setState({\n        top5PerMonth: data\n      });\n    }).catch(console.log);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(AvgTop30Contacted, {\n          avgTop30Contacted: this.state.averge30TopContacted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AverageListing, {\n          averageListing: this.state.averageListing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Distributions, {\n          distributions: this.state.distributions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Top5perMonth, {\n          top5PerMonth: this.state.top5PerMonth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Upload\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"\",\n          id: \"\",\n          onChange: this.handleselectedFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleUpload,\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", Math.round(this.state.loaded, 2), \" %\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/eman/coding/autoscout24/frontend/src/App.js"],"names":["React","Component","AvgTop30Contacted","AverageListing","Distributions","Top5perMonth","axios","App","state","averageListing","distributions","top5PerMonth","averge30TopContacted","selectedFile","loaded","handleselectedFile","event","setState","target","files","handleUpload","data","FormData","append","name","console","log","post","onUploadProgress","ProgressEvent","total","then","res","statusText","componentDidMount","fetch","json","catch","render","Math","round"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport AvgTop30Contacted from './components/Average30Contacted'\nimport AverageListing from './components/AverageListing'\nimport Distributions from './components/Distributions'\nimport Top5perMonth from './components/Top5PerMonth'\nimport axios from 'axios'\n\nclass App extends Component {\n    state = {\n        averageListing: {},\n        distributions: [],\n        top5PerMonth: { \"\": [] },\n        averge30TopContacted: \"\",\n        selectedFile: null,\n        loaded: 0\n    };\n\n    componentDidMount() {\n        fetch('http://localhost:8080/Averge30TopContacted')\n            .then(res => res.json())\n            .then((data) => {\n                this.setState({ averge30TopContacted: data })\n            })\n            .catch(console.log)\n        fetch('http://localhost:8080/averageListing')\n            .then(res => res.json())\n            .then((data) => {\n                this.setState({ averageListing: data })\n            })\n            .catch(console.log)\n        fetch('http://localhost:8080/distributions')\n            .then(res => res.json())\n            .then((data) => {\n                this.setState({ distributions: data })\n            })\n            .catch(console.log)\n        fetch('http://localhost:8080/top5PerMonth')\n            .then(res => res.json())\n            .then((data) => {\n                this.setState({ top5PerMonth: data })\n            })\n            .catch(console.log)\n    }\n\n    handleselectedFile = event => {\n        this.setState({\n            selectedFile: event.target.files[0],\n            loaded: 0,\n        })\n    }\n\n    handleUpload = () => {\n        const data = new FormData()\n        data.append('file', this.state.selectedFile, this.state.selectedFile.name)\n        console.log(data);\n        axios\n          .post('http://localhost:8080/UploadCsvFile', data, {\n            onUploadProgress: ProgressEvent => {\n              this.setState({\n                loaded: (ProgressEvent.loaded / ProgressEvent.total*100),\n              })\n            },\n          })\n          .then(res => {\n            console.log(res.statusText)\n          })\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"container\">\n                    <AvgTop30Contacted avgTop30Contacted={this.state.averge30TopContacted} />\n                    <AverageListing averageListing={this.state.averageListing} />\n                    <Distributions distributions={this.state.distributions} />\n                    <Top5perMonth top5PerMonth={this.state.top5PerMonth} />\n                </div>\n                <div className=\"Upload\">\n                    <input type=\"file\" name=\"\" id=\"\" onChange={this.handleselectedFile} />\n                    <button onClick={this.handleUpload}>Upload</button>\n                    <div> {Math.round(this.state.loaded, 2)} %</div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}