{"ast":null,"code":"var _jsxFileName = \"/Users/eman/coding/autoscout24/frontend/src/components/Button/uploadButton.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { FileUploadContainer, FormField, DragDropText, UploadFileBtn, FilePreviewContainer, ImagePreview, PreviewContainer, PreviewList, FileMetaData, RemoveFileIcon, InputLabel } from \"./file-upload.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst KILO_BYTES_PER_BYTE = 1000;\nconst DEFAULT_MAX_FILE_SIZE_IN_BYTES = 500000;\n\nconst convertNestedObjectToArray = nestedObj => Object.keys(nestedObj).map(key => nestedObj[key]);\n\nconst convertBytesToKB = bytes => Math.round(bytes / KILO_BYTES_PER_BYTE);\n\nconst FileUpload = ({\n  label,\n  updateFilesCb,\n  maxFileSizeInBytes = DEFAULT_MAX_FILE_SIZE_IN_BYTES,\n  ...otherProps\n}) => {\n  _s();\n\n  const fileInputField = useRef(null);\n  const [files, setFiles] = useState({});\n\n  const handleUploadBtnClick = () => {\n    fileInputField.current.click();\n  };\n\n  const addNewFiles = newFiles => {\n    for (let file of newFiles) {\n      if (file.size <= maxFileSizeInBytes) {\n        if (!otherProps.multiple) {\n          return {\n            file\n          };\n        }\n\n        files[file.name] = file;\n      }\n    }\n\n    return { ...files\n    };\n  };\n\n  const callUpdateFilesCb = files => {\n    const filesAsArray = convertNestedObjectToArray(files);\n    updateFilesCb(filesAsArray);\n  };\n\n  const handleNewFileUpload = e => {\n    const {\n      files: newFiles\n    } = e.target;\n\n    if (newFiles.length) {\n      let updatedFiles = addNewFiles(newFiles);\n      setFiles(updatedFiles);\n      callUpdateFilesCb(updatedFiles);\n    }\n  };\n\n  const removeFile = fileName => {\n    delete files[fileName];\n    setFiles({ ...files\n    });\n    callUpdateFilesCb({ ...files\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FileUploadContainer, {\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DragDropText, {\n        children: \"Drag and drop your files anywhere or\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UploadFileBtn, {\n        type: \"button\",\n        onClick: handleUploadBtnClick,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-file-upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" Upload \", otherProps.multiple ? \"files\" : \"a file\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormField, {\n        type: \"file\",\n        ref: fileInputField,\n        onChange: handleNewFileUpload,\n        title: \"\",\n        value: \"\",\n        ...otherProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilePreviewContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"To Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PreviewList, {\n        children: Object.keys(files).map((fileName, index) => {\n          let file = files[fileName];\n          let isImageFile = file.type.split(\"/\")[0] === \"image\";\n          return /*#__PURE__*/_jsxDEV(PreviewContainer, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [isImageFile && /*#__PURE__*/_jsxDEV(ImagePreview, {\n                src: URL.createObjectURL(file),\n                alt: `file preview ${index}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(FileMetaData, {\n                isImageFile: isImageFile,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: file.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [convertBytesToKB(file.size), \" kb\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(RemoveFileIcon, {\n                    className: \"fas fa-trash-alt\",\n                    onClick: () => removeFile(fileName)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)\n          }, fileName, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FileUpload, \"bJg41GRER++xQKzWbuGHiZyfgKg=\");\n\n_c = FileUpload;\nexport default FileUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"sources":["/Users/eman/coding/autoscout24/frontend/src/components/Button/uploadButton.js"],"names":["React","useRef","useState","FileUploadContainer","FormField","DragDropText","UploadFileBtn","FilePreviewContainer","ImagePreview","PreviewContainer","PreviewList","FileMetaData","RemoveFileIcon","InputLabel","KILO_BYTES_PER_BYTE","DEFAULT_MAX_FILE_SIZE_IN_BYTES","convertNestedObjectToArray","nestedObj","Object","keys","map","key","convertBytesToKB","bytes","Math","round","FileUpload","label","updateFilesCb","maxFileSizeInBytes","otherProps","fileInputField","files","setFiles","handleUploadBtnClick","current","click","addNewFiles","newFiles","file","size","multiple","name","callUpdateFilesCb","filesAsArray","handleNewFileUpload","e","target","length","updatedFiles","removeFile","fileName","index","isImageFile","type","split","URL","createObjectURL"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport {\n  FileUploadContainer,\n  FormField,\n  DragDropText,\n  UploadFileBtn,\n  FilePreviewContainer,\n  ImagePreview,\n  PreviewContainer,\n  PreviewList,\n  FileMetaData,\n  RemoveFileIcon,\n  InputLabel\n} from \"./file-upload.styles\";\n\nconst KILO_BYTES_PER_BYTE = 1000;\nconst DEFAULT_MAX_FILE_SIZE_IN_BYTES = 500000;\n\nconst convertNestedObjectToArray = (nestedObj) =>\n  Object.keys(nestedObj).map((key) => nestedObj[key]);\n\nconst convertBytesToKB = (bytes) => Math.round(bytes / KILO_BYTES_PER_BYTE);\n\nconst FileUpload = ({\n  label,\n  updateFilesCb,\n  maxFileSizeInBytes = DEFAULT_MAX_FILE_SIZE_IN_BYTES,\n  ...otherProps\n}) => {\n  const fileInputField = useRef(null);\n  const [files, setFiles] = useState({});\n\n  const handleUploadBtnClick = () => {\n    fileInputField.current.click();\n  };\n\n  const addNewFiles = (newFiles) => {\n    for (let file of newFiles) {\n      if (file.size <= maxFileSizeInBytes) {\n        if (!otherProps.multiple) {\n          return { file };\n        }\n        files[file.name] = file;\n      }\n    }\n    return { ...files };\n  };\n\n  const callUpdateFilesCb = (files) => {\n    const filesAsArray = convertNestedObjectToArray(files);\n    updateFilesCb(filesAsArray);\n  };\n\n  const handleNewFileUpload = (e) => {\n    const { files: newFiles } = e.target;\n    if (newFiles.length) {\n      let updatedFiles = addNewFiles(newFiles);\n      setFiles(updatedFiles);\n      callUpdateFilesCb(updatedFiles);\n    }\n  };\n\n  const removeFile = (fileName) => {\n    delete files[fileName];\n    setFiles({ ...files });\n    callUpdateFilesCb({ ...files });\n  };\n\n  return (\n    <>\n      <FileUploadContainer>\n        <InputLabel>{label}</InputLabel>\n        <DragDropText>Drag and drop your files anywhere or</DragDropText>\n        <UploadFileBtn type=\"button\" onClick={handleUploadBtnClick}>\n          <i className=\"fas fa-file-upload\" />\n          <span> Upload {otherProps.multiple ? \"files\" : \"a file\"}</span>\n        </UploadFileBtn>\n        <FormField\n          type=\"file\"\n          ref={fileInputField}\n          onChange={handleNewFileUpload}\n          title=\"\"\n          value=\"\"\n          {...otherProps}\n        />\n      </FileUploadContainer>\n      <FilePreviewContainer>\n        <span>To Upload</span>\n        <PreviewList>\n          {Object.keys(files).map((fileName, index) => {\n            let file = files[fileName];\n            let isImageFile = file.type.split(\"/\")[0] === \"image\";\n            return (\n              <PreviewContainer key={fileName}>\n                <div>\n                  {isImageFile && (\n                    <ImagePreview\n                      src={URL.createObjectURL(file)}\n                      alt={`file preview ${index}`}\n                    />\n                  )}\n                  <FileMetaData isImageFile={isImageFile}>\n                    <span>{file.name}</span>\n                    <aside>\n                      <span>{convertBytesToKB(file.size)} kb</span>\n                      <RemoveFileIcon\n                        className=\"fas fa-trash-alt\"\n                        onClick={() => removeFile(fileName)}\n                      />\n                    </aside>\n                  </FileMetaData>\n                </div>\n              </PreviewContainer>\n            );\n          })}\n        </PreviewList>\n      </FilePreviewContainer>\n    </>\n  );\n};\nexport default FileUpload;"]},"metadata":{},"sourceType":"module"}